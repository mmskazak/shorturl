// Code generated by MockGen. DO NOT EDIT.
// Source: user_urls.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	storage "mmskazak/shorturl/internal/storage"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIGetUserURLs is a mock of IGetUserURLs interface.
type MockIGetUserURLs struct {
	ctrl     *gomock.Controller
	recorder *MockIGetUserURLsMockRecorder
}

// MockIGetUserURLsMockRecorder is the mock recorder for MockIGetUserURLs.
type MockIGetUserURLsMockRecorder struct {
	mock *MockIGetUserURLs
}

// NewMockIGetUserURLs creates a new mock instance.
func NewMockIGetUserURLs(ctrl *gomock.Controller) *MockIGetUserURLs {
	mock := &MockIGetUserURLs{ctrl: ctrl}
	mock.recorder = &MockIGetUserURLsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIGetUserURLs) EXPECT() *MockIGetUserURLsMockRecorder {
	return m.recorder
}

// GetUserURLs mocks base method.
func (m *MockIGetUserURLs) GetUserURLs(ctx context.Context, userID, baseHost string) ([]storage.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserURLs", ctx, userID, baseHost)
	ret0, _ := ret[0].([]storage.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserURLs indicates an expected call of GetUserURLs.
func (mr *MockIGetUserURLsMockRecorder) GetUserURLs(ctx, userID, baseHost interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserURLs", reflect.TypeOf((*MockIGetUserURLs)(nil).GetUserURLs), ctx, userID, baseHost)
}
