// Code generated by MockGen. DO NOT EDIT.
// Source: delete_user_urls.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIDeleteUserURLs is a mock of IDeleteUserURLs interface.
type MockIDeleteUserURLs struct {
	ctrl     *gomock.Controller
	recorder *MockIDeleteUserURLsMockRecorder
}

// MockIDeleteUserURLsMockRecorder is the mock recorder for MockIDeleteUserURLs.
type MockIDeleteUserURLsMockRecorder struct {
	mock *MockIDeleteUserURLs
}

// NewMockIDeleteUserURLs creates a new mock instance.
func NewMockIDeleteUserURLs(ctrl *gomock.Controller) *MockIDeleteUserURLs {
	mock := &MockIDeleteUserURLs{ctrl: ctrl}
	mock.recorder = &MockIDeleteUserURLsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDeleteUserURLs) EXPECT() *MockIDeleteUserURLsMockRecorder {
	return m.recorder
}

// DeleteURLs mocks base method.
func (m *MockIDeleteUserURLs) DeleteURLs(ctx context.Context, urlIDs []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteURLs", ctx, urlIDs)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteURLs indicates an expected call of DeleteURLs.
func (mr *MockIDeleteUserURLsMockRecorder) DeleteURLs(ctx, urlIDs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteURLs", reflect.TypeOf((*MockIDeleteUserURLs)(nil).DeleteURLs), ctx, urlIDs)
}
